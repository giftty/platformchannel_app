// Objective-C API for talking to github.com/dreacot/dreacotdeliverylibagent Go package.
//   gobind -lang=objc github.com/dreacot/dreacotdeliverylibagent
//
// File is generated by gobind. Do not edit.

#ifndef __Dreacotdeliverylibagent_H__
#define __Dreacotdeliverylibagent_H__

@import Foundation;
#include "ref.h"
#include "Universe.objc.h"


@class DreacotdeliverylibagentAgent;
@class DreacotdeliverylibagentUser;
@protocol DreacotdeliverylibagentConnectionListener;
@class DreacotdeliverylibagentConnectionListener;

@protocol DreacotdeliverylibagentConnectionListener <NSObject>
- (void)onConnected;
- (void)onConnectionEnded:(BOOL)willReconnect;
- (void)onConnectionStarted;
@end

@interface DreacotdeliverylibagentAgent : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
- (BOOL)accountExists:(NSString* _Nullable)email;
- (BOOL)addConnectionListener:(id<DreacotdeliverylibagentConnectionListener> _Nullable)listener uniqueIdentifier:(NSString* _Nullable)uniqueIdentifier error:(NSError* _Nullable* _Nullable)error;
- (void)closeConnection;
- (BOOL)connect:(NSString* _Nullable)server error:(NSError* _Nullable* _Nullable)error;
// skipped method Agent.GetUsers with unsupported parameter or return types

- (BOOL)isConnected;
- (DreacotdeliverylibagentUser* _Nullable)login:(NSString* _Nullable)email password:(NSString* _Nullable)password error:(NSError* _Nullable* _Nullable)error;
- (void)reconnect;
- (void)removeConnectionListener:(NSString* _Nullable)uniqueIdentifier;
- (DreacotdeliverylibagentUser* _Nullable)signup:(NSString* _Nullable)firstname lastname:(NSString* _Nullable)lastname email:(NSString* _Nullable)email password:(NSString* _Nullable)password phone:(NSString* _Nullable)phone error:(NSError* _Nullable* _Nullable)error;
@end

@interface DreacotdeliverylibagentUser : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull id_;
@property (nonatomic) NSString* _Nonnull firstname;
@property (nonatomic) NSString* _Nonnull lastname;
@property (nonatomic) NSString* _Nonnull email;
@property (nonatomic) NSString* _Nonnull phone;
@property (nonatomic) NSString* _Nonnull gender;
@property (nonatomic) NSString* _Nonnull avatar;
@property (nonatomic) NSString* _Nonnull firebaseToken;
@property (nonatomic) NSData* _Nullable privateKey;
@property (nonatomic) NSData* _Nullable privateSigKey;
@property (nonatomic) NSData* _Nullable publicKey;
@property (nonatomic) NSData* _Nullable publicSigKey;
@property (nonatomic) int64_t memberSince;
@property (nonatomic) int32_t status;
@end

@interface Dreacotdeliverylibagent : NSObject
+ (NSError* _Nullable) errExist;
+ (void) setErrExist:(NSError* _Nullable)v;

+ (NSError* _Nullable) errInvalid;
+ (void) setErrInvalid:(NSError* _Nullable)v;

+ (NSError* _Nullable) errListenerAlreadyExist;
+ (void) setErrListenerAlreadyExist:(NSError* _Nullable)v;

+ (NSError* _Nullable) errNotConnected;
+ (void) setErrNotConnected:(NSError* _Nullable)v;

+ (NSError* _Nullable) errNotExist;
+ (void) setErrNotExist:(NSError* _Nullable)v;

+ (NSError* _Nullable) errWrongServerVersion;
+ (void) setErrWrongServerVersion:(NSError* _Nullable)v;

@end

/**
 * NewDreacotDeliveryAgent initializes a new instance of the agent.
 */
FOUNDATION_EXPORT DreacotdeliverylibagentAgent* _Nullable DreacotdeliverylibagentNewDreacotDeliveryAgent(NSString* _Nullable rootDir, NSError* _Nullable* _Nullable error);

@class DreacotdeliverylibagentConnectionListener;

/**
 * must be called with rw mutex lock active
 */
@interface DreacotdeliverylibagentConnectionListener : NSObject <goSeqRefInterface, DreacotdeliverylibagentConnectionListener> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)onConnected;
- (void)onConnectionEnded:(BOOL)willReconnect;
- (void)onConnectionStarted;
@end

#endif
